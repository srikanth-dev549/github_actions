name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
      

  generate-data:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PROJECT_ID: ['${{ github.event.repository.owner.login }}', "example"]
      inputs:
        PROJECT_ID:
          description: 'Enter a value for my_variable'
          required: true
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: true
          fetch-depth: 0
          path: public_repo
      - name: test 2
        run: |
          cd public_repo
          mkdir ${{matrix.PROJECT_ID}}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: srikanth-dev549/files
          ref: main 
          token: ${{ secrets.TOKEN }}
          clean: false
          path: private_repo
 
#       - name: test 2
#         run: |
#           sudo ls -altr
#           cd ../
#           cd github_actions
#           sudo ls
#           sudo touch a
#           git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
#           git config --global user.name "github-actions[bot]"
#           git add .
#           git commit -m "new"
#           git push origin main
      - name: Authenticating gcloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_NEW }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Run python file to get all the principles and roles in data.json | if data.json is already present it will be updated with any manual changes made to the GCP IAM roles
        run: |
          cd private_repo
          ls
          python3 main.py
          cp ${{matrix.PROJECT_ID}}-data.json ../public_repo/${{matrix.PROJECT_ID}}/
          cd ../public_repo/${{PROJECT_ID}}/
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update data.json"
          git push origin main
          cd ~/github_actions/private_repo
          ls
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Initialize Terraform
        run: terraform init
      - name: Apply Terraform changes
        run: terraform apply -auto-approve
      - name: Committing the state file to local repo
        run: |
          cp -rf terraform.tfstate ../public_repo/${{matrix.PROJECT_ID}}/
          cd ../public_repo/${{matrix.PROJECT_ID}}/
          git add .
          git commit -m "Update data.json"
          git push origin main


