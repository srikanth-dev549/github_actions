name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           persist-credentials: true
#           fetch-depth: 0
#       - name: Test 1
#         run: |
#           sudo ls -altr
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
      

  generate-data:
    runs-on: ubuntu-latest
    needs: setup
    steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           persist-credentials: true
#           fetch-depth: 0
#       - name: test 2
#         run: |
#           cd ../
#           sudo ls -altr
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: srikanth-dev549/files
          ref: main # or any branch, commit, or tag
          token: ${{ secrets.TOKEN }}
      - name: test 2
        run: |
          sudo ls -altr
          sudo touch a
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "new"
          git push origin main
      # - name: Authenticating gcloud
      #   uses: 'google-github-actions/auth@v1'
      #   with:
      #     credentials_json: '${{ secrets.GCP_SA_KEY_NEW }}'
      # - name: 'Set up Cloud SDK'
      #   uses: 'google-github-actions/setup-gcloud@v1'
      # - name: 'Use gcloud CLI'
      #   run: 'gcloud info'
      # - name: Run python file to get all the principles and roles in data.json | if data.json is already present it will be updated with any manual changes made to the GCP IAM roles
      #   run: |
      #     sudo ls -altr
      #     python3 main.py
      #     git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --global user.name "github-actions[bot]"
      #     git add .
      #     git commit -m "Update data.json"
      #     git push origin main
      # - name: Set up Terraform
      #   uses: hashicorp/setup-terraform@v1
      # - name: Initialize Terraform
      #   run: terraform init
      # - name: Apply Terraform changes
      #   run: terraform apply -auto-approve
      # - name: Committing the state file to local repo
      #   run: |
      #     git add terraform.tfstate
      #     if git diff-index --quiet HEAD --; then
      #       echo "No changes to commit"
      #       exit 0
      #     else
      #       git commit -m "Update state files"
      #       git push origin main
      #     fi

